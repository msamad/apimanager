// Package organizations provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package organizations

import (
	"encoding/json"
	"fmt"
	"github.com/pkg/errors"
	"time"
)

// ApiBean defines model for ApiBean.
type ApiBean struct {
	CreatedBy    *string           `json:"createdBy,omitempty"`
	CreatedOn    *time.Time        `json:"createdOn,omitempty"`
	Description  *string           `json:"description,omitempty"`
	Id           *string           `json:"id,omitempty"`
	Name         *string           `json:"name,omitempty"`
	NumPublished *int32            `json:"numPublished,omitempty"`
	Organization *OrganizationBean `json:"organization,omitempty"`
}

// ApiGatewayBean defines model for ApiGatewayBean.
type ApiGatewayBean struct {
	GatewayId *string `json:"gatewayId,omitempty"`
}

// ApiKeyBean defines model for ApiKeyBean.
type ApiKeyBean struct {
	ApiKey *string `json:"apiKey,omitempty"`
}

// ApiPlanBean defines model for ApiPlanBean.
type ApiPlanBean struct {
	PlanId  *string `json:"planId,omitempty"`
	Version *string `json:"version,omitempty"`
}

// ApiPlanSummaryBean defines model for ApiPlanSummaryBean.
type ApiPlanSummaryBean struct {
	PlanDescription *string `json:"planDescription,omitempty"`
	PlanId          *string `json:"planId,omitempty"`
	PlanName        *string `json:"planName,omitempty"`
	Version         *string `json:"version,omitempty"`
}

// ApiSummaryBean defines model for ApiSummaryBean.
type ApiSummaryBean struct {
	CreatedOn        *time.Time `json:"createdOn,omitempty"`
	Description      *string    `json:"description,omitempty"`
	Id               *string    `json:"id,omitempty"`
	Name             *string    `json:"name,omitempty"`
	OrganizationId   *string    `json:"organizationId,omitempty"`
	OrganizationName *string    `json:"organizationName,omitempty"`
}

// ApiVersionBean defines model for ApiVersionBean.
type ApiVersionBean struct {
	Api                 *ApiBean                           `json:"api,omitempty"`
	CreatedBy           *string                            `json:"createdBy,omitempty"`
	CreatedOn           *time.Time                         `json:"createdOn,omitempty"`
	DefinitionType      *string                            `json:"definitionType,omitempty"`
	DefinitionUrl       *string                            `json:"definitionUrl,omitempty"`
	DisableKeysStrip    *bool                              `json:"disableKeysStrip,omitempty"`
	Endpoint            *string                            `json:"endpoint,omitempty"`
	EndpointContentType *string                            `json:"endpointContentType,omitempty"`
	EndpointProperties  *ApiVersionBean_EndpointProperties `json:"endpointProperties,omitempty"`
	EndpointType        *string                            `json:"endpointType,omitempty"`
	Gateways            *[]ApiGatewayBean                  `json:"gateways,omitempty"`
	Id                  *int64                             `json:"id,omitempty"`
	ModifiedBy          *string                            `json:"modifiedBy,omitempty"`
	ModifiedOn          *time.Time                         `json:"modifiedOn,omitempty"`
	ParsePayload        *bool                              `json:"parsePayload,omitempty"`
	Plans               *[]ApiPlanBean                     `json:"plans,omitempty"`
	PublicAPI           *bool                              `json:"publicAPI,omitempty"`
	PublishedOn         *time.Time                         `json:"publishedOn,omitempty"`
	RetiredOn           *time.Time                         `json:"retiredOn,omitempty"`
	Status              *string                            `json:"status,omitempty"`
	Version             *string                            `json:"version,omitempty"`
}

// ApiVersionBean_EndpointProperties defines model for ApiVersionBean.EndpointProperties.
type ApiVersionBean_EndpointProperties struct {
	AdditionalProperties map[string]string `json:"-"`
}

// ApiVersionEndpointSummaryBean defines model for ApiVersionEndpointSummaryBean.
type ApiVersionEndpointSummaryBean struct {
	ManagedEndpoint *string `json:"managedEndpoint,omitempty"`
}

// ApiVersionStatusBean defines model for ApiVersionStatusBean.
type ApiVersionStatusBean struct {
	Items  *[]StatusItemBean `json:"items,omitempty"`
	Status *string           `json:"status,omitempty"`
}

// ApiVersionSummaryBean defines model for ApiVersionSummaryBean.
type ApiVersionSummaryBean struct {
	Description      *string `json:"description,omitempty"`
	Id               *string `json:"id,omitempty"`
	Name             *string `json:"name,omitempty"`
	OrganizationId   *string `json:"organizationId,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	PublicAPI        *bool   `json:"publicAPI,omitempty"`
	Status           *string `json:"status,omitempty"`
	Version          *string `json:"version,omitempty"`
}

// AuditEntryBean defines model for AuditEntryBean.
type AuditEntryBean struct {
	CreatedOn      *time.Time `json:"createdOn,omitempty"`
	Data           *string    `json:"data,omitempty"`
	EntityId       *string    `json:"entityId,omitempty"`
	EntityType     *string    `json:"entityType,omitempty"`
	EntityVersion  *string    `json:"entityVersion,omitempty"`
	Id             *int64     `json:"id,omitempty"`
	OrganizationId *string    `json:"organizationId,omitempty"`
	What           *string    `json:"what,omitempty"`
	Who            *string    `json:"who,omitempty"`
}

// ClientBean defines model for ClientBean.
type ClientBean struct {
	CreatedBy    *string           `json:"createdBy,omitempty"`
	CreatedOn    *time.Time        `json:"createdOn,omitempty"`
	Description  *string           `json:"description,omitempty"`
	Id           *string           `json:"id,omitempty"`
	Name         *string           `json:"name,omitempty"`
	Organization *OrganizationBean `json:"organization,omitempty"`
}

// ClientSummaryBean defines model for ClientSummaryBean.
type ClientSummaryBean struct {
	Description      *string `json:"description,omitempty"`
	Id               *string `json:"id,omitempty"`
	Name             *string `json:"name,omitempty"`
	NumContracts     *int32  `json:"numContracts,omitempty"`
	OrganizationId   *string `json:"organizationId,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
}

// ClientUsagePerApiBean defines model for ClientUsagePerApiBean.
type ClientUsagePerApiBean struct {
	Data *ClientUsagePerApiBean_Data `json:"data,omitempty"`
}

// ClientUsagePerApiBean_Data defines model for ClientUsagePerApiBean.Data.
type ClientUsagePerApiBean_Data struct {
	AdditionalProperties map[string]int64 `json:"-"`
}

// ClientVersionBean defines model for ClientVersionBean.
type ClientVersionBean struct {
	Apikey      *string     `json:"apikey,omitempty"`
	Client      *ClientBean `json:"client,omitempty"`
	CreatedBy   *string     `json:"createdBy,omitempty"`
	CreatedOn   *time.Time  `json:"createdOn,omitempty"`
	Id          *int64      `json:"id,omitempty"`
	ModifiedBy  *string     `json:"modifiedBy,omitempty"`
	ModifiedOn  *time.Time  `json:"modifiedOn,omitempty"`
	PublishedOn *time.Time  `json:"publishedOn,omitempty"`
	RetiredOn   *time.Time  `json:"retiredOn,omitempty"`
	Status      *string     `json:"status,omitempty"`
	Version     *string     `json:"version,omitempty"`
}

// ClientVersionSummaryBean defines model for ClientVersionSummaryBean.
type ClientVersionSummaryBean struct {
	ApiKey           *string `json:"apiKey,omitempty"`
	Description      *string `json:"description,omitempty"`
	Id               *string `json:"id,omitempty"`
	Name             *string `json:"name,omitempty"`
	OrganizationId   *string `json:"organizationId,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	Status           *string `json:"status,omitempty"`
	Version          *string `json:"version,omitempty"`
}

// ContractBean defines model for ContractBean.
type ContractBean struct {
	Api       *ApiVersionBean    `json:"api,omitempty"`
	Client    *ClientVersionBean `json:"client,omitempty"`
	CreatedBy *string            `json:"createdBy,omitempty"`
	CreatedOn *time.Time         `json:"createdOn,omitempty"`
	Id        *int64             `json:"id,omitempty"`
	Plan      *PlanVersionBean   `json:"plan,omitempty"`
}

// ContractSummaryBean defines model for ContractSummaryBean.
type ContractSummaryBean struct {
	ApiDescription         *string    `json:"apiDescription,omitempty"`
	ApiId                  *string    `json:"apiId,omitempty"`
	ApiName                *string    `json:"apiName,omitempty"`
	ApiOrganizationId      *string    `json:"apiOrganizationId,omitempty"`
	ApiOrganizationName    *string    `json:"apiOrganizationName,omitempty"`
	ApiVersion             *string    `json:"apiVersion,omitempty"`
	ClientId               *string    `json:"clientId,omitempty"`
	ClientName             *string    `json:"clientName,omitempty"`
	ClientOrganizationId   *string    `json:"clientOrganizationId,omitempty"`
	ClientOrganizationName *string    `json:"clientOrganizationName,omitempty"`
	ClientVersion          *string    `json:"clientVersion,omitempty"`
	ContractId             *int64     `json:"contractId,omitempty"`
	CreatedOn              *time.Time `json:"createdOn,omitempty"`
	PlanId                 *string    `json:"planId,omitempty"`
	PlanName               *string    `json:"planName,omitempty"`
	PlanVersion            *string    `json:"planVersion,omitempty"`
}

// GrantRolesBean defines model for GrantRolesBean.
type GrantRolesBean struct {
	RoleIds *[]string `json:"roleIds,omitempty"`
	UserId  *string   `json:"userId,omitempty"`
}

// MemberBean defines model for MemberBean.
type MemberBean struct {
	Email    *string           `json:"email,omitempty"`
	JoinedOn *time.Time        `json:"joinedOn,omitempty"`
	Roles    *[]MemberRoleBean `json:"roles,omitempty"`
	UserId   *string           `json:"userId,omitempty"`
	UserName *string           `json:"userName,omitempty"`
}

// MemberRoleBean defines model for MemberRoleBean.
type MemberRoleBean struct {
	RoleId   *string `json:"roleId,omitempty"`
	RoleName *string `json:"roleName,omitempty"`
}

// NewApiBean defines model for NewApiBean.
type NewApiBean struct {
	DefinitionType      *string        `json:"definitionType,omitempty"`
	DefinitionUrl       *string        `json:"definitionUrl,omitempty"`
	Description         *string        `json:"description,omitempty"`
	DisableKeysStrip    *bool          `json:"disableKeysStrip,omitempty"`
	Endpoint            *string        `json:"endpoint,omitempty"`
	EndpointContentType *string        `json:"endpointContentType,omitempty"`
	EndpointType        *string        `json:"endpointType,omitempty"`
	InitialVersion      *string        `json:"initialVersion,omitempty"`
	Name                *string        `json:"name,omitempty"`
	ParsePayload        *bool          `json:"parsePayload,omitempty"`
	Plans               *[]ApiPlanBean `json:"plans,omitempty"`
	PublicAPI           *bool          `json:"publicAPI,omitempty"`
}

// NewApiDefinitionBean defines model for NewApiDefinitionBean.
type NewApiDefinitionBean struct {
	DefinitionType *string `json:"definitionType,omitempty"`
	DefinitionUrl  *string `json:"definitionUrl,omitempty"`
}

// NewApiVersionBean defines model for NewApiVersionBean.
type NewApiVersionBean struct {
	Clone               *bool          `json:"clone,omitempty"`
	CloneVersion        *string        `json:"cloneVersion,omitempty"`
	DefinitionType      *string        `json:"definitionType,omitempty"`
	DefinitionUrl       *string        `json:"definitionUrl,omitempty"`
	DisableKeysStrip    *bool          `json:"disableKeysStrip,omitempty"`
	Endpoint            *string        `json:"endpoint,omitempty"`
	EndpointContentType *string        `json:"endpointContentType,omitempty"`
	EndpointType        *string        `json:"endpointType,omitempty"`
	ParsePayload        *bool          `json:"parsePayload,omitempty"`
	Plans               *[]ApiPlanBean `json:"plans,omitempty"`
	PublicAPI           *bool          `json:"publicAPI,omitempty"`
	Version             *string        `json:"version,omitempty"`
}

// NewClientBean defines model for NewClientBean.
type NewClientBean struct {
	Description    *string `json:"description,omitempty"`
	InitialVersion *string `json:"initialVersion,omitempty"`
	Name           *string `json:"name,omitempty"`
}

// NewClientVersionBean defines model for NewClientVersionBean.
type NewClientVersionBean struct {
	ApiKey       *string `json:"apiKey,omitempty"`
	Clone        *bool   `json:"clone,omitempty"`
	CloneVersion *string `json:"cloneVersion,omitempty"`
	Version      *string `json:"version,omitempty"`
}

// NewContractBean defines model for NewContractBean.
type NewContractBean struct {
	ApiId      *string `json:"apiId,omitempty"`
	ApiOrgId   *string `json:"apiOrgId,omitempty"`
	ApiVersion *string `json:"apiVersion,omitempty"`
	PlanId     *string `json:"planId,omitempty"`
}

// NewOrganizationBean defines model for NewOrganizationBean.
type NewOrganizationBean struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// NewPlanBean defines model for NewPlanBean.
type NewPlanBean struct {
	Description    *string `json:"description,omitempty"`
	InitialVersion *string `json:"initialVersion,omitempty"`
	Name           *string `json:"name,omitempty"`
}

// NewPlanVersionBean defines model for NewPlanVersionBean.
type NewPlanVersionBean struct {
	Clone        *bool   `json:"clone,omitempty"`
	CloneVersion *string `json:"cloneVersion,omitempty"`
	Version      *string `json:"version,omitempty"`
}

// NewPolicyBean defines model for NewPolicyBean.
type NewPolicyBean struct {
	Configuration *string `json:"configuration,omitempty"`
	DefinitionId  *string `json:"definitionId,omitempty"`
}

// OrganizationBean defines model for OrganizationBean.
type OrganizationBean struct {
	CreatedBy   *string    `json:"createdBy,omitempty"`
	CreatedOn   *time.Time `json:"createdOn,omitempty"`
	Description *string    `json:"description,omitempty"`
	Id          *string    `json:"id,omitempty"`
	ModifiedBy  *string    `json:"modifiedBy,omitempty"`
	ModifiedOn  *time.Time `json:"modifiedOn,omitempty"`
	Name        *string    `json:"name,omitempty"`
}

// PlanBean defines model for PlanBean.
type PlanBean struct {
	CreatedBy    *string           `json:"createdBy,omitempty"`
	CreatedOn    *time.Time        `json:"createdOn,omitempty"`
	Description  *string           `json:"description,omitempty"`
	Id           *string           `json:"id,omitempty"`
	Name         *string           `json:"name,omitempty"`
	Organization *OrganizationBean `json:"organization,omitempty"`
}

// PlanSummaryBean defines model for PlanSummaryBean.
type PlanSummaryBean struct {
	Description      *string `json:"description,omitempty"`
	Id               *string `json:"id,omitempty"`
	Name             *string `json:"name,omitempty"`
	OrganizationId   *string `json:"organizationId,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
}

// PlanVersionBean defines model for PlanVersionBean.
type PlanVersionBean struct {
	CreatedBy  *string    `json:"createdBy,omitempty"`
	CreatedOn  *time.Time `json:"createdOn,omitempty"`
	Id         *int64     `json:"id,omitempty"`
	LockedOn   *time.Time `json:"lockedOn,omitempty"`
	ModifiedBy *string    `json:"modifiedBy,omitempty"`
	ModifiedOn *time.Time `json:"modifiedOn,omitempty"`
	Plan       *PlanBean  `json:"plan,omitempty"`
	Status     *string    `json:"status,omitempty"`
	Version    *string    `json:"version,omitempty"`
}

// PlanVersionSummaryBean defines model for PlanVersionSummaryBean.
type PlanVersionSummaryBean struct {
	Description      *string `json:"description,omitempty"`
	Id               *string `json:"id,omitempty"`
	Name             *string `json:"name,omitempty"`
	OrganizationId   *string `json:"organizationId,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	Status           *string `json:"status,omitempty"`
	Version          *string `json:"version,omitempty"`
}

// PolicyBean defines model for PolicyBean.
type PolicyBean struct {
	Configuration  *string               `json:"configuration,omitempty"`
	CreatedBy      *string               `json:"createdBy,omitempty"`
	CreatedOn      *time.Time            `json:"createdOn,omitempty"`
	Definition     *PolicyDefinitionBean `json:"definition,omitempty"`
	Description    *string               `json:"description,omitempty"`
	EntityId       *string               `json:"entityId,omitempty"`
	EntityVersion  *string               `json:"entityVersion,omitempty"`
	Id             *int64                `json:"id,omitempty"`
	ModifiedBy     *string               `json:"modifiedBy,omitempty"`
	ModifiedOn     *time.Time            `json:"modifiedOn,omitempty"`
	Name           *string               `json:"name,omitempty"`
	OrderIndex     *int32                `json:"orderIndex,omitempty"`
	OrganizationId *string               `json:"organizationId,omitempty"`
	Type           *string               `json:"type,omitempty"`
}

// PolicyChainBean defines model for PolicyChainBean.
type PolicyChainBean struct {
	Policies *[]PolicySummaryBean `json:"policies,omitempty"`
}

// PolicyDefinitionBean defines model for PolicyDefinitionBean.
type PolicyDefinitionBean struct {
	Deleted     *bool                           `json:"deleted,omitempty"`
	Description *string                         `json:"description,omitempty"`
	Form        *string                         `json:"form,omitempty"`
	FormType    *string                         `json:"formType,omitempty"`
	Icon        *string                         `json:"icon,omitempty"`
	Id          *string                         `json:"id,omitempty"`
	Name        *string                         `json:"name,omitempty"`
	PluginId    *int64                          `json:"pluginId,omitempty"`
	PolicyImpl  *string                         `json:"policyImpl,omitempty"`
	Templates   *[]PolicyDefinitionTemplateBean `json:"templates,omitempty"`
}

// PolicyDefinitionTemplateBean defines model for PolicyDefinitionTemplateBean.
type PolicyDefinitionTemplateBean struct {
	Language *string `json:"language,omitempty"`
	Template *string `json:"template,omitempty"`
}

// PolicySummaryBean defines model for PolicySummaryBean.
type PolicySummaryBean struct {
	CreatedBy          *string    `json:"createdBy,omitempty"`
	CreatedOn          *time.Time `json:"createdOn,omitempty"`
	Description        *string    `json:"description,omitempty"`
	Icon               *string    `json:"icon,omitempty"`
	Id                 *int64     `json:"id,omitempty"`
	Name               *string    `json:"name,omitempty"`
	PolicyDefinitionId *string    `json:"policyDefinitionId,omitempty"`
}

// ResponseStatsDataPoint defines model for ResponseStatsDataPoint.
type ResponseStatsDataPoint struct {
	Errors   *int64  `json:"errors,omitempty"`
	Failures *int64  `json:"failures,omitempty"`
	Label    *string `json:"label,omitempty"`
	Total    *int64  `json:"total,omitempty"`
}

// ResponseStatsHistogramBean defines model for ResponseStatsHistogramBean.
type ResponseStatsHistogramBean struct {
	Data *[]ResponseStatsDataPoint `json:"data,omitempty"`
}

// ResponseStatsPerClientBean defines model for ResponseStatsPerClientBean.
type ResponseStatsPerClientBean struct {
	Data *ResponseStatsPerClientBean_Data `json:"data,omitempty"`
}

// ResponseStatsPerClientBean_Data defines model for ResponseStatsPerClientBean.Data.
type ResponseStatsPerClientBean_Data struct {
	AdditionalProperties map[string]ResponseStatsDataPoint `json:"-"`
}

// ResponseStatsPerPlanBean defines model for ResponseStatsPerPlanBean.
type ResponseStatsPerPlanBean struct {
	Data *ResponseStatsPerPlanBean_Data `json:"data,omitempty"`
}

// ResponseStatsPerPlanBean_Data defines model for ResponseStatsPerPlanBean.Data.
type ResponseStatsPerPlanBean_Data struct {
	AdditionalProperties map[string]ResponseStatsDataPoint `json:"-"`
}

// ResponseStatsSummaryBean defines model for ResponseStatsSummaryBean.
type ResponseStatsSummaryBean struct {
	Errors   *int64 `json:"errors,omitempty"`
	Failures *int64 `json:"failures,omitempty"`
	Total    *int64 `json:"total,omitempty"`
}

// SearchResultsBeanAuditEntryBean defines model for SearchResultsBeanAuditEntryBean.
type SearchResultsBeanAuditEntryBean struct {
	Beans     *[]AuditEntryBean `json:"beans,omitempty"`
	TotalSize *int32            `json:"totalSize,omitempty"`
}

// StatusItemBean defines model for StatusItemBean.
type StatusItemBean struct {
	Done        *bool   `json:"done,omitempty"`
	Id          *string `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	Optional    *bool   `json:"optional,omitempty"`
	Remediation *string `json:"remediation,omitempty"`
}

// UpdateApiBean defines model for UpdateApiBean.
type UpdateApiBean struct {
	Description *string `json:"description,omitempty"`
}

// UpdateApiVersionBean defines model for UpdateApiVersionBean.
type UpdateApiVersionBean struct {
	DisableKeysStrip    *bool                                    `json:"disableKeysStrip,omitempty"`
	Endpoint            *string                                  `json:"endpoint,omitempty"`
	EndpointContentType *string                                  `json:"endpointContentType,omitempty"`
	EndpointProperties  *UpdateApiVersionBean_EndpointProperties `json:"endpointProperties,omitempty"`
	EndpointType        *string                                  `json:"endpointType,omitempty"`
	Gateways            *[]ApiGatewayBean                        `json:"gateways,omitempty"`
	ParsePayload        *bool                                    `json:"parsePayload,omitempty"`
	Plans               *[]ApiPlanBean                           `json:"plans,omitempty"`
	PublicAPI           *bool                                    `json:"publicAPI,omitempty"`
}

// UpdateApiVersionBean_EndpointProperties defines model for UpdateApiVersionBean.EndpointProperties.
type UpdateApiVersionBean_EndpointProperties struct {
	AdditionalProperties map[string]string `json:"-"`
}

// UpdateClientBean defines model for UpdateClientBean.
type UpdateClientBean struct {
	Description *string `json:"description,omitempty"`
}

// UpdateOrganizationBean defines model for UpdateOrganizationBean.
type UpdateOrganizationBean struct {
	Description *string `json:"description,omitempty"`
}

// UpdatePlanBean defines model for UpdatePlanBean.
type UpdatePlanBean struct {
	Description *string `json:"description,omitempty"`
}

// UpdatePolicyBean defines model for UpdatePolicyBean.
type UpdatePolicyBean struct {
	Configuration *string `json:"configuration,omitempty"`
}

// UsageDataPoint defines model for UsageDataPoint.
type UsageDataPoint struct {
	Count *int64  `json:"count,omitempty"`
	Label *string `json:"label,omitempty"`
}

// UsageHistogramBean defines model for UsageHistogramBean.
type UsageHistogramBean struct {
	Data *[]UsageDataPoint `json:"data,omitempty"`
}

// UsagePerClientBean defines model for UsagePerClientBean.
type UsagePerClientBean struct {
	Data *UsagePerClientBean_Data `json:"data,omitempty"`
}

// UsagePerClientBean_Data defines model for UsagePerClientBean.Data.
type UsagePerClientBean_Data struct {
	AdditionalProperties map[string]int64 `json:"-"`
}

// UsagePerPlanBean defines model for UsagePerPlanBean.
type UsagePerPlanBean struct {
	Data *UsagePerPlanBean_Data `json:"data,omitempty"`
}

// UsagePerPlanBean_Data defines model for UsagePerPlanBean.Data.
type UsagePerPlanBean_Data struct {
	AdditionalProperties map[string]int64 `json:"-"`
}

// NewPolicyBeanRequestBody defines model for NewPolicyBeanRequestBody.
type NewPolicyBeanRequestBody NewPolicyBean

// PolicyChainBeanRequestBody defines model for PolicyChainBeanRequestBody.
type PolicyChainBeanRequestBody PolicyChainBean

// UpdatePolicyBeanRequestBody defines model for UpdatePolicyBeanRequestBody.
type UpdatePolicyBeanRequestBody UpdatePolicyBean

// CreateJSONBody defines parameters for Create.
type CreateJSONBody NewOrganizationBean

// UpdateJSONBody defines parameters for Update.
type UpdateJSONBody UpdateOrganizationBean

// Activity1Params defines parameters for Activity1.
type Activity1Params struct {
	Page  *int32 `json:"page,omitempty"`
	Count *int32 `json:"count,omitempty"`
}

// CreateApi1JSONBody defines parameters for CreateApi1.
type CreateApi1JSONBody NewApiBean

// UpdateApi1JSONBody defines parameters for UpdateApi1.
type UpdateApi1JSONBody UpdateApiBean

// GetApiActivity1Params defines parameters for GetApiActivity1.
type GetApiActivity1Params struct {
	Page  *int32 `json:"page,omitempty"`
	Count *int32 `json:"count,omitempty"`
}

// CreateApiVersion1JSONBody defines parameters for CreateApiVersion1.
type CreateApiVersion1JSONBody NewApiVersionBean

// UpdateApiVersion1JSONBody defines parameters for UpdateApiVersion1.
type UpdateApiVersion1JSONBody UpdateApiVersionBean

// GetApiVersionActivity1Params defines parameters for GetApiVersionActivity1.
type GetApiVersionActivity1Params struct {
	Page  *int32 `json:"page,omitempty"`
	Count *int32 `json:"count,omitempty"`
}

// GetApiVersionContracts1Params defines parameters for GetApiVersionContracts1.
type GetApiVersionContracts1Params struct {
	Page  *int32 `json:"page,omitempty"`
	Count *int32 `json:"count,omitempty"`
}

// UpdateApiDefinitionFromURL1JSONBody defines parameters for UpdateApiDefinitionFromURL1.
type UpdateApiDefinitionFromURL1JSONBody NewApiDefinitionBean

// GetResponseStatsPerClient1Params defines parameters for GetResponseStatsPerClient1.
type GetResponseStatsPerClient1Params struct {
	From *string `json:"from,omitempty"`
	To   *string `json:"to,omitempty"`
}

// GetUsagePerClient1Params defines parameters for GetUsagePerClient1.
type GetUsagePerClient1Params struct {
	From *string `json:"from,omitempty"`
	To   *string `json:"to,omitempty"`
}

// GetResponseStatsPerPlan1Params defines parameters for GetResponseStatsPerPlan1.
type GetResponseStatsPerPlan1Params struct {
	From *string `json:"from,omitempty"`
	To   *string `json:"to,omitempty"`
}

// GetUsagePerPlan1Params defines parameters for GetUsagePerPlan1.
type GetUsagePerPlan1Params struct {
	From *string `json:"from,omitempty"`
	To   *string `json:"to,omitempty"`
}

// GetResponseStats1Params defines parameters for GetResponseStats1.
type GetResponseStats1Params struct {
	Interval *string `json:"interval,omitempty"`
	From     *string `json:"from,omitempty"`
	To       *string `json:"to,omitempty"`
}

// GetResponseStatsSummary1Params defines parameters for GetResponseStatsSummary1.
type GetResponseStatsSummary1Params struct {
	From *string `json:"from,omitempty"`
	To   *string `json:"to,omitempty"`
}

// GetUsage1Params defines parameters for GetUsage1.
type GetUsage1Params struct {
	Interval *string `json:"interval,omitempty"`
	From     *string `json:"from,omitempty"`
	To       *string `json:"to,omitempty"`
}

// CreateClient1JSONBody defines parameters for CreateClient1.
type CreateClient1JSONBody NewClientBean

// UpdateClient1JSONBody defines parameters for UpdateClient1.
type UpdateClient1JSONBody UpdateClientBean

// GetClientActivity1Params defines parameters for GetClientActivity1.
type GetClientActivity1Params struct {
	Page  *int32 `json:"page,omitempty"`
	Count *int32 `json:"count,omitempty"`
}

// CreateClientVersion1JSONBody defines parameters for CreateClientVersion1.
type CreateClientVersion1JSONBody NewClientVersionBean

// GetClientVersionActivity1Params defines parameters for GetClientVersionActivity1.
type GetClientVersionActivity1Params struct {
	Page  *int32 `json:"page,omitempty"`
	Count *int32 `json:"count,omitempty"`
}

// UpdateClientApiKey1JSONBody defines parameters for UpdateClientApiKey1.
type UpdateClientApiKey1JSONBody ApiKeyBean

// GetApiRegistryJSON1Params defines parameters for GetApiRegistryJSON1.
type GetApiRegistryJSON1Params struct {
	Download *string `json:"download,omitempty"`
}

// GetApiRegistryXML1Params defines parameters for GetApiRegistryXML1.
type GetApiRegistryXML1Params struct {
	Download *string `json:"download,omitempty"`
}

// CreateContract1JSONBody defines parameters for CreateContract1.
type CreateContract1JSONBody NewContractBean

// GetClientUsagePerApi1Params defines parameters for GetClientUsagePerApi1.
type GetClientUsagePerApi1Params struct {
	From *string `json:"from,omitempty"`
	To   *string `json:"to,omitempty"`
}

// CreatePlan1JSONBody defines parameters for CreatePlan1.
type CreatePlan1JSONBody NewPlanBean

// UpdatePlan1JSONBody defines parameters for UpdatePlan1.
type UpdatePlan1JSONBody UpdatePlanBean

// GetPlanActivity1Params defines parameters for GetPlanActivity1.
type GetPlanActivity1Params struct {
	Page  *int32 `json:"page,omitempty"`
	Count *int32 `json:"count,omitempty"`
}

// CreatePlanVersion1JSONBody defines parameters for CreatePlanVersion1.
type CreatePlanVersion1JSONBody NewPlanVersionBean

// GetPlanVersionActivity1Params defines parameters for GetPlanVersionActivity1.
type GetPlanVersionActivity1Params struct {
	Page  *int32 `json:"page,omitempty"`
	Count *int32 `json:"count,omitempty"`
}

// Grant1JSONBody defines parameters for Grant1.
type Grant1JSONBody GrantRolesBean

// CreateRequestBody defines body for Create for application/json ContentType.
type CreateJSONRequestBody CreateJSONBody

// UpdateRequestBody defines body for Update for application/json ContentType.
type UpdateJSONRequestBody UpdateJSONBody

// CreateApi1RequestBody defines body for CreateApi1 for application/json ContentType.
type CreateApi1JSONRequestBody CreateApi1JSONBody

// UpdateApi1RequestBody defines body for UpdateApi1 for application/json ContentType.
type UpdateApi1JSONRequestBody UpdateApi1JSONBody

// CreateApiVersion1RequestBody defines body for CreateApiVersion1 for application/json ContentType.
type CreateApiVersion1JSONRequestBody CreateApiVersion1JSONBody

// UpdateApiVersion1RequestBody defines body for UpdateApiVersion1 for application/json ContentType.
type UpdateApiVersion1JSONRequestBody UpdateApiVersion1JSONBody

// UpdateApiDefinitionFromURL1RequestBody defines body for UpdateApiDefinitionFromURL1 for application/json ContentType.
type UpdateApiDefinitionFromURL1JSONRequestBody UpdateApiDefinitionFromURL1JSONBody

// CreateApiPolicy1RequestBody defines body for CreateApiPolicy1 for application/json ContentType.
type CreateApiPolicy1JSONRequestBody NewPolicyBeanRequestBody

// UpdateApiPolicy1RequestBody defines body for UpdateApiPolicy1 for application/json ContentType.
type UpdateApiPolicy1JSONRequestBody UpdatePolicyBeanRequestBody

// ReorderApiPolicies1RequestBody defines body for ReorderApiPolicies1 for application/json ContentType.
type ReorderApiPolicies1JSONRequestBody PolicyChainBeanRequestBody

// CreateClient1RequestBody defines body for CreateClient1 for application/json ContentType.
type CreateClient1JSONRequestBody CreateClient1JSONBody

// UpdateClient1RequestBody defines body for UpdateClient1 for application/json ContentType.
type UpdateClient1JSONRequestBody UpdateClient1JSONBody

// CreateClientVersion1RequestBody defines body for CreateClientVersion1 for application/json ContentType.
type CreateClientVersion1JSONRequestBody CreateClientVersion1JSONBody

// UpdateClientApiKey1RequestBody defines body for UpdateClientApiKey1 for application/json ContentType.
type UpdateClientApiKey1JSONRequestBody UpdateClientApiKey1JSONBody

// CreateContract1RequestBody defines body for CreateContract1 for application/json ContentType.
type CreateContract1JSONRequestBody CreateContract1JSONBody

// CreateClientPolicy1RequestBody defines body for CreateClientPolicy1 for application/json ContentType.
type CreateClientPolicy1JSONRequestBody NewPolicyBeanRequestBody

// UpdateClientPolicy1RequestBody defines body for UpdateClientPolicy1 for application/json ContentType.
type UpdateClientPolicy1JSONRequestBody UpdatePolicyBeanRequestBody

// ReorderClientPolicies1RequestBody defines body for ReorderClientPolicies1 for application/json ContentType.
type ReorderClientPolicies1JSONRequestBody PolicyChainBeanRequestBody

// CreatePlan1RequestBody defines body for CreatePlan1 for application/json ContentType.
type CreatePlan1JSONRequestBody CreatePlan1JSONBody

// UpdatePlan1RequestBody defines body for UpdatePlan1 for application/json ContentType.
type UpdatePlan1JSONRequestBody UpdatePlan1JSONBody

// CreatePlanVersion1RequestBody defines body for CreatePlanVersion1 for application/json ContentType.
type CreatePlanVersion1JSONRequestBody CreatePlanVersion1JSONBody

// CreatePlanPolicy1RequestBody defines body for CreatePlanPolicy1 for application/json ContentType.
type CreatePlanPolicy1JSONRequestBody NewPolicyBeanRequestBody

// UpdatePlanPolicy1RequestBody defines body for UpdatePlanPolicy1 for application/json ContentType.
type UpdatePlanPolicy1JSONRequestBody UpdatePolicyBeanRequestBody

// ReorderPlanPolicies1RequestBody defines body for ReorderPlanPolicies1 for application/json ContentType.
type ReorderPlanPolicies1JSONRequestBody PolicyChainBeanRequestBody

// Grant1RequestBody defines body for Grant1 for application/json ContentType.
type Grant1JSONRequestBody Grant1JSONBody

// Getter for additional properties for ApiVersionBean_EndpointProperties. Returns the specified
// element and whether it was found
func (a ApiVersionBean_EndpointProperties) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ApiVersionBean_EndpointProperties
func (a *ApiVersionBean_EndpointProperties) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ApiVersionBean_EndpointProperties to handle AdditionalProperties
func (a *ApiVersionBean_EndpointProperties) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return errors.Wrap(err, fmt.Sprintf("error unmarshaling field %s", fieldName))
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ApiVersionBean_EndpointProperties to handle AdditionalProperties
func (a ApiVersionBean_EndpointProperties) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, errors.Wrap(err, fmt.Sprintf("error marshaling '%s'", fieldName))
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ClientUsagePerApiBean_Data. Returns the specified
// element and whether it was found
func (a ClientUsagePerApiBean_Data) Get(fieldName string) (value int64, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ClientUsagePerApiBean_Data
func (a *ClientUsagePerApiBean_Data) Set(fieldName string, value int64) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]int64)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ClientUsagePerApiBean_Data to handle AdditionalProperties
func (a *ClientUsagePerApiBean_Data) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]int64)
		for fieldName, fieldBuf := range object {
			var fieldVal int64
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return errors.Wrap(err, fmt.Sprintf("error unmarshaling field %s", fieldName))
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ClientUsagePerApiBean_Data to handle AdditionalProperties
func (a ClientUsagePerApiBean_Data) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, errors.Wrap(err, fmt.Sprintf("error marshaling '%s'", fieldName))
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ResponseStatsPerClientBean_Data. Returns the specified
// element and whether it was found
func (a ResponseStatsPerClientBean_Data) Get(fieldName string) (value ResponseStatsDataPoint, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ResponseStatsPerClientBean_Data
func (a *ResponseStatsPerClientBean_Data) Set(fieldName string, value ResponseStatsDataPoint) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]ResponseStatsDataPoint)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ResponseStatsPerClientBean_Data to handle AdditionalProperties
func (a *ResponseStatsPerClientBean_Data) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]ResponseStatsDataPoint)
		for fieldName, fieldBuf := range object {
			var fieldVal ResponseStatsDataPoint
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return errors.Wrap(err, fmt.Sprintf("error unmarshaling field %s", fieldName))
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ResponseStatsPerClientBean_Data to handle AdditionalProperties
func (a ResponseStatsPerClientBean_Data) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, errors.Wrap(err, fmt.Sprintf("error marshaling '%s'", fieldName))
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ResponseStatsPerPlanBean_Data. Returns the specified
// element and whether it was found
func (a ResponseStatsPerPlanBean_Data) Get(fieldName string) (value ResponseStatsDataPoint, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ResponseStatsPerPlanBean_Data
func (a *ResponseStatsPerPlanBean_Data) Set(fieldName string, value ResponseStatsDataPoint) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]ResponseStatsDataPoint)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ResponseStatsPerPlanBean_Data to handle AdditionalProperties
func (a *ResponseStatsPerPlanBean_Data) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]ResponseStatsDataPoint)
		for fieldName, fieldBuf := range object {
			var fieldVal ResponseStatsDataPoint
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return errors.Wrap(err, fmt.Sprintf("error unmarshaling field %s", fieldName))
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ResponseStatsPerPlanBean_Data to handle AdditionalProperties
func (a ResponseStatsPerPlanBean_Data) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, errors.Wrap(err, fmt.Sprintf("error marshaling '%s'", fieldName))
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for UpdateApiVersionBean_EndpointProperties. Returns the specified
// element and whether it was found
func (a UpdateApiVersionBean_EndpointProperties) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for UpdateApiVersionBean_EndpointProperties
func (a *UpdateApiVersionBean_EndpointProperties) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for UpdateApiVersionBean_EndpointProperties to handle AdditionalProperties
func (a *UpdateApiVersionBean_EndpointProperties) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return errors.Wrap(err, fmt.Sprintf("error unmarshaling field %s", fieldName))
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for UpdateApiVersionBean_EndpointProperties to handle AdditionalProperties
func (a UpdateApiVersionBean_EndpointProperties) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, errors.Wrap(err, fmt.Sprintf("error marshaling '%s'", fieldName))
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for UsagePerClientBean_Data. Returns the specified
// element and whether it was found
func (a UsagePerClientBean_Data) Get(fieldName string) (value int64, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for UsagePerClientBean_Data
func (a *UsagePerClientBean_Data) Set(fieldName string, value int64) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]int64)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for UsagePerClientBean_Data to handle AdditionalProperties
func (a *UsagePerClientBean_Data) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]int64)
		for fieldName, fieldBuf := range object {
			var fieldVal int64
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return errors.Wrap(err, fmt.Sprintf("error unmarshaling field %s", fieldName))
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for UsagePerClientBean_Data to handle AdditionalProperties
func (a UsagePerClientBean_Data) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, errors.Wrap(err, fmt.Sprintf("error marshaling '%s'", fieldName))
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for UsagePerPlanBean_Data. Returns the specified
// element and whether it was found
func (a UsagePerPlanBean_Data) Get(fieldName string) (value int64, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for UsagePerPlanBean_Data
func (a *UsagePerPlanBean_Data) Set(fieldName string, value int64) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]int64)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for UsagePerPlanBean_Data to handle AdditionalProperties
func (a *UsagePerPlanBean_Data) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]int64)
		for fieldName, fieldBuf := range object {
			var fieldVal int64
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return errors.Wrap(err, fmt.Sprintf("error unmarshaling field %s", fieldName))
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for UsagePerPlanBean_Data to handle AdditionalProperties
func (a UsagePerPlanBean_Data) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, errors.Wrap(err, fmt.Sprintf("error marshaling '%s'", fieldName))
		}
	}
	return json.Marshal(object)
}

